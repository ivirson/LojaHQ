<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ivirson.LojaHQ.API</name>
    </assembly>
    <members>
        <member name="M:Blog.API.Controllers.LoginController.Autenticar(Ivirson.LojaHQ.Models.Usuario)">
            <summary>
            Método que retorna um usuário logado e um token de autenticação
            </summary>
            <param name="model">Informações do Usuario a logar</param>
            <returns>
            Em caso de sucesso, retorna o Usuário autenticado e um token
            Em caso de erro, retorna 404 (Not Found)
            </returns>
        </member>
        <member name="M:Ivirson.LojaHQ.API.Controllers.ProdutosController.GetProdutos">
            <summary>
            Serviço que retorna a lista de Produtos cadastrados no banco de dados e com status "ativo"
            </summary>
            <returns>
            Retorna a lista de Produtos
            </returns>
        </member>
        <member name="M:Ivirson.LojaHQ.API.Controllers.ProdutosController.GetProduto(System.Int32)">
            <summary>
            Método que retorna, em detalhes, um Produto que esteja ativo no banco de dados
            </summary>
            <param name="id">Identificador da produto a ser detalhado</param>
            <returns>
            Retorna um Produto, caso encontre. 
            Caso contrário, retorna código 404 (Not Found)
            </returns>
        </member>
        <member name="M:Ivirson.LojaHQ.API.Controllers.ProdutosController.PutProduto(System.Int32,Ivirson.LojaHQ.Models.Produto)">
            <summary>
            Método de edição de um Produto previamente existente
            </summary>
            <param name="id">Identificador da produto a ter suas informações alteradas</param>
            <param name="produto">Objeto com as alterações</param>
            <returns>
            Retorna apenas o código de sucesso, em caso de sucesso.
            Caso o Id enviado seja diferente do Id do produto enviado, retorna BadRequest.
            Caso o Id enviado não corresponda a um Produto válido, retorna código 404 (Not Found) 
            </returns>
        </member>
        <member name="M:Ivirson.LojaHQ.API.Controllers.ProdutosController.PostProduto(Ivirson.LojaHQ.Models.Produto)">
            <summary>
            Metodo de criação de um novo Produto no banco de dados
            </summary>
            <param name="produto">Produto a ser adicionado</param>
            <returns>
            Retorna o produto adicionado
            </returns>
        </member>
        <member name="M:Ivirson.LojaHQ.API.Controllers.ProdutosController.DeleteProduto(System.Int32)">
            <summary>
            Método de exclusão lógica de um Produto previamente cadastrado no banco de dados
            </summary>
            <param name="id">Identificadoor do produto a ser excluído</param>
            <returns>
            Retorna apenas o código de sucesso, em caso de sucesso.
            Caso o Id enviado não corresponda a um Produto válido, retorna código 404 (Not Found) 
            </returns>
        </member>
    </members>
</doc>
